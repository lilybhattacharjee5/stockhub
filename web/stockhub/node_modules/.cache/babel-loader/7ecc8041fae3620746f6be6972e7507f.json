{"ast":null,"code":"import { fetchStocksBegin, fetchStocksSuccess } from \"./stockActions\";\nimport Papa from 'papaparse';\nexport function fetchStockSearchData() {\n  return dispatch => {\n    dispatch(fetchStocksBegin());\n    return fetch(\"./companylist.csv\").then(handleErrors).then(res => res.text()).then(data => {\n      const results = Papa.parse(data).data;\n      const mappedData = results.map(stock => ({\n        symbol: stock[0],\n        name: stock[1]\n      }));\n      return dispatch(fetchStocksSuccess(mappedData));\n    });\n  };\n}\nexport function handleErrors(response) {\n  if (!response.ok) throw Error(response.statusText);\n  return response;\n}","map":{"version":3,"sources":["/Users/lilybhattacharjee/Documents/stockhub/web/stockhub/src/stockSearchActions.js"],"names":["fetchStocksBegin","fetchStocksSuccess","Papa","fetchStockSearchData","dispatch","fetch","then","handleErrors","res","text","data","results","parse","mappedData","map","stock","symbol","name","response","ok","Error","statusText"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,kBAA3B,QAAqD,gBAArD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAO,SAASC,oBAAT,GAAgC;AACrC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACA,WAAOK,KAAK,CAAC,mBAAD,CAAL,CACNC,IADM,CACDC,YADC,EAEND,IAFM,CAEDE,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFN,EAGNH,IAHM,CAGDI,IAAI,IAAI;AACZ,YAAMC,OAAO,GAAGT,IAAI,CAACU,KAAL,CAAWF,IAAX,EAAiBA,IAAjC;AACA,YAAMG,UAAU,GAAGF,OAAO,CAACG,GAAR,CAAaC,KAAD,KAAY;AACzCC,QAAAA,MAAM,EAAED,KAAK,CAAC,CAAD,CAD4B;AAEzCE,QAAAA,IAAI,EAAEF,KAAK,CAAC,CAAD;AAF8B,OAAZ,CAAZ,CAAnB;AAIA,aAAOX,QAAQ,CAACH,kBAAkB,CAACY,UAAD,CAAnB,CAAf;AACD,KAVM,CAAP;AAWD,GAbD;AAcD;AAED,OAAO,SAASN,YAAT,CAAsBW,QAAtB,EAAgC;AACrC,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB,MAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AAClB,SAAOH,QAAP;AACD","sourcesContent":["import { fetchStocksBegin, fetchStocksSuccess } from \"./stockActions\";\nimport Papa from 'papaparse';\n\nexport function fetchStockSearchData() {\n  return dispatch => {\n    dispatch(fetchStocksBegin());\n    return fetch(\"./companylist.csv\")\n    .then(handleErrors)\n    .then(res => res.text())\n    .then(data => {\n      const results = Papa.parse(data).data;\n      const mappedData = results.map((stock) => ({\n        symbol: stock[0],\n        name: stock[1],\n      }));\n      return dispatch(fetchStocksSuccess(mappedData));\n    });\n  }\n}\n\nexport function handleErrors(response) {\n  if (!response.ok) throw Error(response.statusText);\n  return response;\n}\n"]},"metadata":{},"sourceType":"module"}