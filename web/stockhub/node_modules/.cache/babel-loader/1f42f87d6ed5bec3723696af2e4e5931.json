{"ast":null,"code":"var _jsxFileName = \"/Users/lilybhattacharjee/Documents/stockhub/web/stockhub/src/SearchBar.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStockSearchData } from \"./stockSearchActions\";\nimport { TrieNode } from './trie';\nconst stockTrie = new TrieNode(undefined, {});\n\nclass SearchBar extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchStockSearchData()).then(() => {\n      if (!this.props.stocks) return;\n\n      for (let i = 0; i < this.props.stocks.length; i++) {\n        if (this.props.stocks[i].name) {\n          stockTrie.insert(stockTrie, this.props.stocks[i].name);\n        }\n      }\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({\n      inputValue: evt.target.value\n    });\n    stockTrie.search(stockTrie, evt.target.value);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"search\",\n      id: \"stockSearch\",\n      placeholder: \"Facebook\",\n      value: this.state.inputValue,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, stockTrie.searchResult.map((stock, id) => React.createElement(\"p\", {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, stock))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  stocks: state.stocks.items\n});\n\nexport default connect(mapStateToProps)(SearchBar);","map":{"version":3,"sources":["/Users/lilybhattacharjee/Documents/stockhub/web/stockhub/src/SearchBar.jsx"],"names":["React","connect","fetchStockSearchData","TrieNode","stockTrie","undefined","SearchBar","PureComponent","constructor","props","state","inputValue","handleChange","bind","componentDidMount","dispatch","then","stocks","i","length","name","insert","evt","setState","target","value","search","render","searchResult","map","stock","id","mapStateToProps","items"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,sBAArC;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,MAAMC,SAAS,GAAG,IAAID,QAAJ,CAAaE,SAAb,EAAwB,EAAxB,CAAlB;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,aAA9B,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,KAAL,CAAWM,QAAX,CAAoBb,oBAAoB,EAAxC,EAA4Cc,IAA5C,CAAiD,MAAM;AACrD,UAAI,CAAC,KAAKP,KAAL,CAAWQ,MAAhB,EAAwB;;AACxB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,KAAL,CAAWQ,MAAX,CAAkBE,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AACjD,YAAI,KAAKT,KAAL,CAAWQ,MAAX,CAAkBC,CAAlB,EAAqBE,IAAzB,EAA+B;AAC7BhB,UAAAA,SAAS,CAACiB,MAAV,CAAiBjB,SAAjB,EAA4B,KAAKK,KAAL,CAAWQ,MAAX,CAAkBC,CAAlB,EAAqBE,IAAjD;AACD;AACF;AACF,KAPD;AAQD;;AAEDR,EAAAA,YAAY,CAACU,GAAD,EAAM;AAChB,SAAKC,QAAL,CAAc;AACZZ,MAAAA,UAAU,EAAEW,GAAG,CAACE,MAAJ,CAAWC;AADX,KAAd;AAGArB,IAAAA,SAAS,CAACsB,MAAV,CAAiBtB,SAAjB,EAA4BkB,GAAG,CAACE,MAAJ,CAAWC,KAAvC;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,EAAE,EAAC,aAAxB;AAAsC,MAAA,WAAW,EAAC,UAAlD;AAA6D,MAAA,KAAK,EAAG,KAAKjB,KAAL,CAAWC,UAAhF;AAA6F,MAAA,QAAQ,EAAG,KAAKC,YAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIR,SAAS,CAACwB,YAAV,CAAuBC,GAAvB,CACA,CAACC,KAAD,EAAQC,EAAR,KAAe;AAAG,MAAA,GAAG,EAAGA,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBD,KAAhB,CADf,CADJ,CAFF,CADF;AAUD;;AAtCyC;;AAyC5C,MAAME,eAAe,GAAItB,KAAD,KAAY;AAClCO,EAAAA,MAAM,EAAEP,KAAK,CAACO,MAAN,CAAagB;AADa,CAAZ,CAAxB;;AAIA,eAAehC,OAAO,CAAC+B,eAAD,CAAP,CAAyB1B,SAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStockSearchData } from \"./stockSearchActions\";\nimport { TrieNode } from './trie';\n\nconst stockTrie = new TrieNode(undefined, {});\n\nclass SearchBar extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchStockSearchData()).then(() => {\n      if (!this.props.stocks) return;\n      for (let i = 0; i < this.props.stocks.length; i++) {\n        if (this.props.stocks[i].name) {\n          stockTrie.insert(stockTrie, this.props.stocks[i].name);\n        }\n      }\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({\n      inputValue: evt.target.value,\n    });\n    stockTrie.search(stockTrie, evt.target.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <input type=\"search\" id=\"stockSearch\" placeholder=\"Facebook\" value={ this.state.inputValue } onChange={ this.handleChange } />\n        <div className=\"dropdown\">\n          { stockTrie.searchResult.map(\n            (stock, id) => <p key={ id }>{ stock }</p>\n          ) }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  stocks: state.stocks.items,\n});\n\nexport default connect(mapStateToProps)(SearchBar);\n"]},"metadata":{},"sourceType":"module"}